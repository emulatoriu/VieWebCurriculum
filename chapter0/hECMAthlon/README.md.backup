# hecmathlon

The **hECMAthlon** is a feature competition where programmers can measure their strength in refactoring javascript code. Every competitor gets a codebase and their task is to refactor the code using the newest features of the ECMAScript. You are lucky and your friend is part of the judge of the competition. He shared with you the codebase and the main point of view of the judgment. Before you participate in the real competition you need to practice it.

## What are you going to learn?

* Important features of ECMA Standardised Javascript
* Refactor code

## Tasks

### Block variables
Transform the variables in every function to being declared with the **const** or **let** keywords.

1. There is no variable declared with the var keyword in the javascript code

### .reduce()
The **reduce()** method executes a reducer function (that you provide) on each element of the array, resulting in single output value. Refactor the **getMaxValue()** function using the **reduce()** method.

1. The **getMaxValue()** function starts with the return keyword in the JavaScript code

### .filter()
The **filter()** method creates a new array with all elements that pass the test implemented by the provided function. Refactor the **getGreaterThan()** function using the **filter()** method.

1. The **getGreaterThan()** function starts with the return keyword in the JavaScript code

### .map()
The **map()** method creates a new array populated with the results of calling a provided function on every element in the calling array. Refactor the **fizzBuzz()** function using the **map()** method. Check the BG materials how can you create an array from a number.

1. There is no for loop in the **fizzBuzz()** function in the JavaScript code

### Easy copy
Refactor the **getOutput()** function using the spread operator.

1. The **getOutput()** function starts with the return keyword.

### Ternary Operator
Refactor the **fizzBuzz()** method's **if/else** part by using ternary operator only.

1. There is no if and else keyword in **fizzBuzz()** just ternary operator.

### Hints
* The files in the backend folder give you a small preview of what you are going to do soon. You do not really need to understand them now

### Background Materials
* [.filter()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)
* [.reduce()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce)
* [How create an array from a number](https://jasonwatmore.com/post/2021/10/02/vanilla-js-create-an-array-with-a-range-of-numbers-in-a-javascript)
* [.map()](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)
* [ternary Operator](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Conditional_Operator)
* [Examples about the features](https://www.javascripttutorial.net/es6/difference-between-var-and-let/)
